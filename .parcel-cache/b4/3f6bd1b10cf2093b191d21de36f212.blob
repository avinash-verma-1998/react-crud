var helpers = require("../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  var _react = require("react");
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _componentsLoader = require("../components/Loader");
  var _componentsLoaderDefault = _parcelHelpers.interopDefault(_componentsLoader);
  var _componentsUserBox = require("../components/UserBox");
  var _componentsUserBoxDefault = _parcelHelpers.interopDefault(_componentsUserBox);
  var _fetch = require("../fetch");
  var _jsxFileName = "/home/avi/dev/learn/revoir_assign/src/Pages/UserPage.js", _s = $RefreshSig$();
  const UserPage = () => {
    _s();
    const [users, setUsers] = _react.useState(null);
    const [isLoading, setIsLoading] = _react.useState(true);
    const [page, setPage] = _react.useState(1);
    _react.useEffect(() => {
      setIsLoading(true);
      _fetch.getUsers(page).then(data => {
        setUsers(data);
        setIsLoading(false);
      }).catch(err => {
        console.log(err.message);
        setIsLoading(false);
      });
      return () => {};
    }, [page]);
    const handleNext = () => {
      setPage(p => p + 1);
    };
    const handlePrevious = () => {
      setPage(p => p - 1);
    };
    return (
      /*#__PURE__*/_reactDefault.default.createElement(_reactDefault.default.Fragment, null, /*#__PURE__*/_reactDefault.default.createElement("h3", {
        className: "mt-2 ml-2 has-text-centered title",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 32,
          columnNumber: 7
        }
      }, "List of users"), /*#__PURE__*/_reactDefault.default.createElement(_componentsLoaderDefault.default, {
        isLoading: isLoading,
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 33,
          columnNumber: 7
        }
      }), /*#__PURE__*/_reactDefault.default.createElement("div", {
        className: "user-page",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 34,
          columnNumber: 7
        }
      }, isLoading ? " " : users.map(elem => /*#__PURE__*/_reactDefault.default.createElement(_componentsUserBoxDefault.default, {
        key: elem.id,
        name: elem.name,
        id: elem.id,
        email: elem.email,
        active: elem.status === "active",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 38,
          columnNumber: 15
        }
      }))), /*#__PURE__*/_reactDefault.default.createElement("nav", {
        className: "mb-4 ml-4 mr-4 pagination",
        role: "navigation",
        "aria-label": "pagination",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 47,
          columnNumber: 7
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("button", {
        disabled: page === 1,
        onClick: handlePrevious,
        className: "button is-primary",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 52,
          columnNumber: 9
        }
      }, "Previous"), /*#__PURE__*/_reactDefault.default.createElement("p", {
        className: "page title is-size-5",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 59,
          columnNumber: 9
        }
      }, page), /*#__PURE__*/_reactDefault.default.createElement("button", {
        onClick: handleNext,
        className: "button is-primary",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 60,
          columnNumber: 9
        }
      }, "Next page")))
    );
  };
  _s(UserPage, "ulUR9MMQQWvldD3+2YhVUKVwnJc=");
  _c = UserPage;
  exports.default = UserPage;
  var _c;
  $RefreshReg$(_c, "UserPage");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
