var helpers = require("../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  var _react = require("react");
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _reactRouter = require("react-router");
  var _componentsLoader = require("../components/Loader");
  var _componentsLoaderDefault = _parcelHelpers.interopDefault(_componentsLoader);
  var _componentsPost = require("../components/Post");
  var _componentsPostDefault = _parcelHelpers.interopDefault(_componentsPost);
  var _fetch = require("../fetch");
  var _jsxFileName = "/home/avi/dev/learn/revoir_assign/src/Pages/UserProfile.js", _s = $RefreshSig$();
  const UserProfile = () => {
    _s();
    const [isLoading, setIsLoading] = _react.useState(true);
    const [user, setUser] = _react.useState(null);
    const [posts, setPosts] = _react.useState(null);
    const history = _reactRouter.useHistory();
    const {id} = _reactRouter.useParams();
    _react.useEffect(() => {
      setIsLoading(true);
      _fetch.getUserDetails(id).then(data => {
        setUser(data);
        _fetch.getUserPosts(id).then(post => {
          setPosts(post);
          setIsLoading(false);
        });
      }).catch(err => {
        setIsLoading(false);
        console.log(err.message);
      });
    }, []);
    const createPost = () => {
      history.push(`/post/${id}`);
    };
    return (
      /*#__PURE__*/_reactDefault.default.createElement(_reactDefault.default.Fragment, null, /*#__PURE__*/_reactDefault.default.createElement("div", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 34,
          columnNumber: 7
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("button", {
        onClick: () => {
          history.push("/");
        },
        className: "button is-primary is-light",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 35,
          columnNumber: 9
        }
      }, " ", "HOME"), /*#__PURE__*/_reactDefault.default.createElement(_componentsLoaderDefault.default, {
        isLoading: isLoading,
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 45,
          columnNumber: 9
        }
      })), isLoading ? null : /*#__PURE__*/_reactDefault.default.createElement(_reactDefault.default.Fragment, null, /*#__PURE__*/_reactDefault.default.createElement("div", {
        className: "user-showcase",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 49,
          columnNumber: 11
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("h1", {
        className: "title has-text-centered",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 50,
          columnNumber: 13
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("span", {
        className: user.status === "active" ? "active" : "inactive",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 51,
          columnNumber: 15
        }
      }), " ", user.name, "(", user.status, ")"), /*#__PURE__*/_reactDefault.default.createElement("p", {
        className: "ml-5 title",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 56,
          columnNumber: 13
        }
      }, "Email"), /*#__PURE__*/_reactDefault.default.createElement("p", {
        className: "ml-5 subtitle",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 57,
          columnNumber: 13
        }
      }, user.email), /*#__PURE__*/_reactDefault.default.createElement("p", {
        className: "ml-5 title",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 58,
          columnNumber: 13
        }
      }, "Gender"), /*#__PURE__*/_reactDefault.default.createElement("p", {
        className: "ml-5 subtitle",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 59,
          columnNumber: 13
        }
      }, user.gender), /*#__PURE__*/_reactDefault.default.createElement("hr", {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 60,
          columnNumber: 13
        }
      })), /*#__PURE__*/_reactDefault.default.createElement("div", {
        className: "has-text-centered",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 63,
          columnNumber: 11
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("button", {
        onClick: createPost,
        className: " button is-primary is-large is-light",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 64,
          columnNumber: 13
        }
      }, "Create Post")), /*#__PURE__*/_reactDefault.default.createElement("div", {
        className: "posts",
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 71,
          columnNumber: 11
        }
      }, isLoading ? null : posts.map(post => /*#__PURE__*/_reactDefault.default.createElement(_componentsPostDefault.default, {
        key: post.id,
        title: post.title,
        body: post.body,
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 75,
          columnNumber: 19
        }
      })))))
    );
  };
  _s(UserProfile, "+CY9QlcuxFjNXE9SxfGhoZeVF84=", false, function () {
    return [_reactRouter.useHistory, _reactRouter.useParams];
  });
  _c = UserProfile;
  exports.default = UserProfile;
  var _c;
  $RefreshReg$(_c, "UserProfile");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
